const PDFDocument = require('pdfkit');
const fs = require('fs');

/**
 * Generate a professional maintenance checklist PDF
 * @param {Object} checklist - Checklist data
 * @param {Array} photos - Array of photo objects { url, description }
 * @param {string} outputPath - Path to save the PDF
 */
function generateChecklistPDF(checklist, photos, outputPath) {
    return new Promise((resolve, reject) => {
        try {
            const doc = new PDFDocument({ margin: 40, size: 'A4' });
            const writeStream = fs.createWriteStream(outputPath);
            writeStream.on('finish', () => resolve());
            writeStream.on('error', (err) => reject(err));
            doc.pipe(writeStream);

            // Title
            doc.fontSize(24).font('Helvetica-Bold').text('Maintenance Checklist', { align: 'center' });
            doc.moveDown(1);

            // Checklist Details
            doc.fontSize(14).font('Helvetica').text('Checklist Details:', { underline: true });
            doc.moveDown(0.5);
            Object.entries(checklist).forEach(([key, value]) => {
                doc.font('Helvetica-Bold').text(`${key}: `, { continued: true }).font('Helvetica').text(`${value}`);
            });
            doc.moveDown(1);

            // Review Section
            doc.fontSize(14).font('Helvetica').text('Review:', { underline: true });
            doc.moveDown(0.5);
            if (checklist.review) {
                doc.font('Helvetica').text(checklist.review);
            } else {
                doc.font('Helvetica-Oblique').text('No review provided.');
            }
            doc.moveDown(2);

            // Photos Section (last pages)
            if (photos && photos.length > 0) {
                doc.addPage();
                doc.fontSize(18).font('Helvetica-Bold').text('Checklist Photos', { align: 'center' });
                doc.moveDown(1);
                photos.forEach((photo, idx) => {
                    doc.fontSize(12).font('Helvetica-Bold').text(`Photo ${idx + 1}: ${photo.description || 'No description'}`);
                    doc.moveDown(0.5);
                    if (photo.url) {
                        doc.image(photo.url, { fit: [400, 300], align: 'center' });
                        doc.moveDown(1);
                    }
                });
            }

            // Footer
            doc.moveDown(2);
            doc.fontSize(10).font('Helvetica-Oblique').text('Generated by Maintenance App', { align: 'center' });
            doc.end();
        } catch (err) {
            reject(err);
        }
    });
}

module.exports = generateChecklistPDF;
